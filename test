<template>
  <div class="container my-5">
    <div class="header text-center py-5 rounded shadow animate__animated animate__fadeIn">
      <h1>Documentation Utilisateur</h1>
    </div>
    <div class="menu-buttons d-flex justify-content-end my-4">
      <button v-for="(category, index) in categories" :key="index" @click="setActiveCategory(index)" class="btn btn-primary mx-2 animate__animated animate__fadeInUp">
        {{ category.name }}
      </button>
    </div>
    <div v-if="activeCategoryIndex === categories.findIndex(cat => cat.name === 'Fichiers')" class="sub-menu text-center my-4">
      <button @click="scrollToSection('Téléchargement')" class="btn btn-secondary mx-2">Téléchargement</button>
      <button @click="scrollToSection('Récupérer')" class="btn btn-secondary mx-2">Récupérer</button>
    </div>
    <section v-for="(page, index) in activeCategory.pages" :key="index" :id="page.title.replace(/[^a-zA-Z]/g, '')" class="page-section animate__animated animate__fadeIn">
      <div class="card mb-4 shadow-sm">
        <div class="card-body">
          <h4 class="card-title text-center text-primary">{{ page.title }}</h4>
          <p class="card-text">{{ page.description }}</p>
          <div v-if="page.image" class="text-center my-3">
            <img :src="page.image" :alt="page.title" class="img-fluid rounded shadow-sm">
          </div>
          <p><strong>Fonctionnalités:</strong></p>
          <ul>
            <li v-for="(feature, featureIndex) in page.features" :key="featureIndex">{{ feature }}</li>
          </ul>
        </div>
      </div>
    </section>
  </div>
</template>

<script setup lang="ts">
import 'animate.css';

const pages = [
  {
    category: "Navigation",
    sections: [
      {
        title: "Barre de navigation",
        description: "La barre de navigation permet d'accéder facilement aux différentes sections du site.",
        image: "/images/navbar.jpg",
        features: [
          "Menu déroulant pour les sections principales",
          "Liens vers les pages",
          "Possibilité de changer de thème (sombre/clair) avec l'icône en haut à droite de votre page"
        ]
      },
    ]
  },
  {
    category: "Jeux de données",
    sections: [
      {
        title: "Jeux de données",
        description: "La page des jeux de données vous permet de générer des jeux de données.",
        image: "/images/jeuxdedonnées.PNG",
        features: [
          "Possibilité de changer d'environnement (tipi/tipi-client)",
          "Accès rapide aux sections (RNF, Titre, Rôle, EPS)",
          "Mettre à jour les dernières données (20, 50, 70, 100 lignes)",
          "Afficher les données sous forme de tableau",
          "Il est possible de trier chaque colonne par ordre croissant ou décroissant en cliquant sur l'en-tête en noir",
          "Rechercher les références présentes dans le tableau avec la barre de recherche placée en haut à droite du tableau",
          "Afficher plus de lignes par page (10, 25)"
        ]
      },
      // other sections...
    ]
  },
  // other categories...
  {
    category: "Fichiers",
    sections: [
      {
        title: "Téléchargement de fichiers , sélection",
        description: "Arrivé sur la page de téléchargement, vous devrez sélectionner des options afin d'afficher les fichiers que vous souhaitez télécharger.",
        image: "/images/téléchargement.PNG",
        features: [
          "Le type de données : Données/Log",
          "Environnement : Tipi/tipi-client",
          "Zone : ZA/ZU"
        ]
      },
      {
        title: "Récupérer de fichiers",
        description: "Cette section permet de récupérer des fichiers spécifiques.",
        image: "/images/récupération.PNG",
        features: [
          "Génère un fichier ZIP contenant la liste des fichiers que vous avez sélectionnés dans le tableau",
        ]
      },
      // other sections...
    ]
  },
];

const categories = [
  { name: "Navigation", pages: pages.find(page => page.category === "Navigation")?.sections },
  { name: "Jeux de données", pages: pages.find(page => page.category === "Jeux de données")?.sections },
  { name: "Suivi de production", pages: pages.find(page => page.category === "Suivi de production")?.sections },
  { name: "Paiement", pages: pages.find(page => page.category === "Paiement")?.sections },
  { name: "Fichiers", pages: pages.find(page => page.category === "Fichiers")?.sections },
];

const activeCategoryIndex = ref(0);
const activeCategory = computed(() => categories[activeCategoryIndex.value]);

const setActiveCategory = (index: number) => {
  activeCategoryIndex.value = index;
};

const scrollToSection = (section: string) => {
  const sectionId = section.replace(/[^a-zA-Z]/g, '');
  const element = document.getElementById(sectionId);
  if (element) {
    element.scrollIntoView({ behavior: 'smooth' });
  }
};
</script>

<style scoped>
.container {
  margin: auto;
  padding: 20px;
  background-color: #f8f9fa;
}

.header {
  background-color: #007bff;
  color: white;
  border-radius: 5px;
}

.menu-buttons .btn {
  padding: 10px 20px;
  margin: 5px;
  transition: background-color 0.3s;
}

.menu-buttons .btn:hover {
  background-color: #0056b3;
}

.sub-menu .btn {
  padding: 10px 20px;
  margin: 5px;
  transition: background-color 0.3s;
}

.sub-menu .btn:hover {
  background-color: #0056b3;
}

.page-section {
  margin-top: 20px;
}

.card {
  border: none;
}

.card-title {
  margin-bottom: 20px;
}

.card-text {
  margin-bottom: 20px;
}

ul {
  padding-left: 20px;
}

li {
  margin-bottom: 10px;
}

img {
  max-width: 100%;
  height: auto;
}
</style>