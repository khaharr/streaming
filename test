<template>
  <div class="container my-5">
    <div class="header text-center py-5 rounded shadow animate__animated animate__fadeIn">
      <h1>Documentation API</h1>
    </div>
    <div>
      <div class="buttons my-4 text-center">
        <button v-for="(category, index) in categories" :key="index" @click="setActiveCategory(index)" class="btn btn-primary mx-2 animate__animated animate__fadeInUp">
          {{ category.name }}
        </button>
      </div>
    </div>
    <section v-for="(api, index) in activeCategory.apis" :key="index" class="page-section animate__animated animate__fadeIn">
      <h4 class="text-center text-primary">{{ api.titre }}</h4>
      <h2>{{ api.method }} {{ api.url }}</h2>
      <p><strong>Description:</strong> {{ api.description }}</p>
      <p><strong>Type d'entrée:</strong></p>
      <pre>{{ api.inputType }}</pre>
      <p><strong>Type de sortie:</strong></p>
      <pre>{{ api.outputType }}</pre>
      <p><strong>Exemple de résultat:</strong></p>
      <pre>{{ api.result }}</pre>
      <p><strong>Exemple d'erreurs:</strong></p>
      <pre>{{ api.errors }}</pre>
    </section>
  </div>
</template>

<script setup lang="ts">
import 'animate.css';

const apis = [
  {
    category: "Fichiers",
    endpoints: [
      {
        titre: "Récupération de fichiers",
        method: 'GET',
        url: '/api/file/[env]/upload/list',
        description: "Récupère les options d'environnement, de zone et de catégories de fichiers disponibles pour le dépôt.",
        inputType: "Aucun paramètre d'entrée requis.",
        outputType: `{
          "zone": ["za", "zu"],
          "env": ["tipi", "tipi-client"],
          "datacat": {
            "za": {
              "nominoe": {
                "extension": ".xml",
                "format": "nominoe.xml"
              },
              "ics": {
                "extension": ".txt",
                "format": "LISTE_ICS_FRANCE"
              }
            },
            "zu": {
              "helios": {
                "extension": ".xml",
                "format": "TIPI"
              }
            }
          }
        }`,
        result: `{
          "zone": ["za", "zu"],
          "env": ["tipi", "tipi-client"],
          "datacat": {
            "za": {
              "nominoe": {
                "extension": ".xml",
                "format": "nominoe.xml"
              },
              "ics": {
                "extension": ".txt",
                "format": "LISTE_ICS_FRANCE"
              }
            },
            "zu": {
              "helios": {
                "extension": ".xml",
                "format": "TIPI"
              }
            }
          }
        }`,
        errors: `{
          "error": true,
          "message": "Impossible de récupérer les fichiers."
        }`
      },
      {
        titre: "Dépôt de fichier",
        method: 'POST',
        url: '/api/file/{env}/upload/{zone}/{category}/depot',
        description: 'Dépose un fichier dans la catégorie spécifiée pour l\'environnement et la zone donnés.',
        inputType: `{
          "fichier": "Contenu du fichier à télécharger (fichier binaire)"
        }`,
        outputType: `{
          "success": true,
          "message": "Fichier déposé avec succès."
        }`,
        result: `{
          "success": true,
          "message": "Fichier déposé avec succès."
        }`,
        errors: `{
          "success": false,
          "message": "Erreur lors du dépôt du fichier."
        }`
      },
      {
        titre: "Liste des fichiers à télécharger",
        method: 'GET',
        url: '/api/file/tipi/download/{typedata}/{zone}/listfile',
        description: 'Récupère une liste de fichiers disponibles pour le téléchargement dans une zone spécifique.',
        inputType: "Aucun paramètre d'entrée requis.",
        outputType: `[
          {
            "nomfichier": "exemple.log",
            "size": "5.000000 Mo",
            "pathFull": "/path/to/exemple2.log",
            "date": "11/06/2023",
            "zone": "ZA"
          }
        ]`,
        result: `[
          {
            "nomfichier": "exemple.log",
            "size": "5.000000 Mo",
            "pathFull": "/path/to/exemple2.log",
            "date": "11/06/2023",
            "zone": "ZA"
          }
        ]`,
        errors: `{
          "error": true,
          "message": "Impossible de récupérer la liste des fichiers."
        }`
      },
      {
        titre: "Téléchargement de fichier",
        method: 'POST',
        url: '/api/file/tipi/download/{typedata}/download.ts',
        description: 'Permet de générer et de télécharger un fichier zip contenant les fichiers sélectionnés.',
        inputType: `{
          "files": ["liste", "des", "fichiers"]
        }`,
        outputType: "application/zip",
        result: `{
          "HTTP/1.1 OK",
          "Content-Type": "application/zip"
        }`,
        errors: `{
          "error": true,
          "message": "Erreur lors du téléchargement des fichiers."
        }`
      }
    ]
  },
  // Ajoutez les autres catégories et points de terminaison ici...
];

const categories = [
  { name: "fichiers", apis: apis.find(api => api.category === "Fichiers")?.endpoints },
  { name: "Jeux de données", apis: apis.find(api => api.category === "Jeux de données")?.endpoints },
  { name: "Suivi de production", apis: apis.find(api => api.category === "Suivi de production")?.endpoints },
  { name: "Paiement", apis: apis.find(api => api.category === "Paiement")?.endpoints }
];

const activeCategoryIndex = ref(0);
const activeCategory = computed(() => categories[activeCategoryIndex.value]);

const setActiveCategory = (index: number) => {
  activeCategoryIndex.value = index;
};
</script>

<style scoped>
.container {
  margin: auto;
  padding: 20px;
}

pre {
  padding: 10px;
  border: 1px solid #817d7d;
  border-radius: 5px;
}

h4 {
  padding: 10px;
  border: 1px solid #4c57f0;
  border-radius: 50px;
  text-align: center;
}

.header {
  background-color: #007bff;
  color: white;
  border-radius: 5px;
}

.category-button {
  margin: 10px 5px;
  padding: 10px 15px;
  background-color: #4c57f0;
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.category-button:hover {
  background-color: #787986;
}
</style>