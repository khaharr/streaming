<template>
  <div class="container my-5">
    <div class="header text-center py-5 rounded shadow animate__animated animate__fadeIn">
      <h1>Documentation Utilisateur</h1>
    </div>
    <div class="buttons my-4 text-center">
      <button v-for="(category, index) in categories" :key="index" @click="setActiveCategory(index)" class="btn btn-primary mx-2 animate__animated animate__fadeInUp">
        {{ category.name }}
      </button>
    </div>
    <div v-if="activeCategory.name === 'Fichiers'" class="fichiers-menu text-right my-4">
      <a href="#telechargement" class="btn btn-secondary mx-2 animate__animated animate__fadeInUp">Téléchargement</a>
      <a href="#recuperation" class="btn btn-secondary mx-2 animate__animated animate__fadeInUp">Récupération</a>
    </div>
    <section v-for="(page, index) in activeCategory.pages" :key="index" :id="page.id" class="page-section animate__animated animate__fadeIn">
      <div class="card mb-4 shadow-sm">
        <div class="card-body">
          <h4 class="card-title text-center text-primary">{{ page.title }}</h4>
          <p class="card-text">{{ page.description }}</p>
          <div v-if="page.image" class="text-center my-3">
            <img :src="page.image" :alt="page.title" class="img-fluid rounded shadow-sm">
          </div>
          <p><strong>Fonctionnalités:</strong></p>
          <ul>
            <li v-for="(feature, featureIndex) in page.features" :key="featureIndex">{{ feature }}</li>
          </ul>
        </div>
      </div>
    </section>
  </div>
</template>


<script setup lang="ts">
import 'animate.css';

const pages = [
  {
    category: "Navigation",
    sections: [
      {
        id: "navigation-bar",
        title: "Barre de navigation",
        description: "La barre de navigation permet d'accéder facilement aux différentes sections du site.",
        image: "/images/navbar.jpg",
        features: [
          "Menu déroulant pour les sections principales",
          "Liens vers les pages",
          "Possibilité de changer de thème (sombre/clair) avec l'icône en haut à droite de votre page"
        ]
      },
    ]
  },
  {
    category: "Jeux de données",
    sections: [
      {
        id: "jeux-de-donnees",
        title: "Jeux de données",
        description: "La page des jeux de données vous permet de générer des jeux de données.",
        image: "/images/jeuxdedonnées.PNG",
        features: [
          "Possibilité de changer d'environnement (tipi/tipi-client)",
          "Accès rapide aux sections (RNF, Titre, Rôle, EPS)",
          "Mettre à jour les dernières données (20, 50, 70, 100 lignes)",
          "Afficher les données sous forme de tableau",
          "Il est possible de trier chaque colonne par ordre croissant ou décroissant en cliquant sur l'en-tête en noir",
          "Rechercher les références présentes dans le tableau avec la barre de recherche placée en haut à droite du tableau",
          "Afficher plus de lignes par page (10, 25)"
        ]
      },
      {
        id: "changer-environnement",
        title: "Jeux de données, changer d'environnement",
        description: "cocher la case afin de changer d'environnement et récupérer les jeux de données de l'environnement choisi ",
        image: "/images/env.PNG",
        features: [
          "changement d'application tipi/tipi-client",
        ]
      },
      {
        id: "sections",
        title: "Jeux de données, sections ",
        description: "Accéder au differentes séction en cliquant sur les différents radios ",
        image: "/images/sections.PNG",
        features: [
          "EXEMPLE : si je clique sur Titre je vais par la suite générer tous les Jeux de données liée au Titre",
        ]
      },
      {
        id: "afficher-mettre-a-jour",
        title: "Jeux de données,afficher/Mettre à jour",
        description: "permet d'afficher les données et de mettre ajour les données afin de récperer les données les plus récentes ",
        image: "/images/afficher.PNG",
        features: [
          "cliquer sur afficher afin de générer le tableau de donnée",
          "cliquer sur Mettre à jour afin de générer le tableau avec les données récentes "
        ]
      },
      {
        id: "mettre-a-jour",
        title: "Mettre à jour",
        description: "des que le bouton Mettre a jour est cliquer , vous aurez la possiblité de choisir le nombre de lignes a Mettre a jour",
        image: "/images/Mettreajour.png",
        features: [
          "EXEMPLE : si je choisi 70  ,je vais récupérer les 70 données les plus récentes",
          
        ]
      },
      
    ]
  },
  {
    category: "Suivi de production",
    sections: [
      {
        id: "suivi-production",
        title: "Suivi de production (tipi/tipi-client/Payfip)",
        description: "Cette page permet de faire un suivi de production de la IIA (tipi/tipi-client/Payfip).",
        image: "/images/suivideproduction.PNG",
        features: [
          "Gestion des traitements : choisir un ou plusieurs cas, par exemple, 'À venir' et 'Terminé' affichera dans le tableau tous les traitements 'À venir' et les traitements terminés."
        ]
      },
    ]
  },
  {
    category: "Paiement",
    sections: [
      {
        id: "paiement",
        title: "Paiement (tipi/tipi-client)",
        description: "La page de paiement vous permettra de faciliter tous vos tests de paiement.",
        image: "/images/Paiement.PNG",
        features: [
          "Tous les champs du formulaire doivent être verts pour pouvoir créer un paiement",
          "Possibilité de réaliser des paiements Web service, URL et via le portail PAYFIP",
        ]
      },
      {
        id: "exer",
        title: "Paiement, EXER",
        description: "Le Champ Exercice correspond a la Date ",
        image: "/images/Exercice.PNG",
        features: [
          "Vous ne pouvez mettre que des chiffres ",
          "Maximum de caractére est de 4",
          "Champ obligatoire"
        ]
      },
      {
        id: "saisie",
        title: "Paiement, Saisie",
        description: "Le Champ Saisie correspond au Mode de Saisie  ",
        image: "/images/Saisie.png",
        features: [
          "T pour des paiement de Test",
          "X pour des paiement d'activation",
          "W pour des paiements réels"
        ]
      },
      {
        id: "numero-client",
        title: "Paiement, Numéro de client",
        description: "Le Numéro Client attribue a la collectivite par l'administrateur TIPI ",
        image: "/images/nmc.PNG",
        features: [
          "vous ne pouvez mettre que des chiffres",
          "Maximum de caractére est de 6",
          "Champ obligatoire"
        ]
      },
      {
        id: "reference-dette",
        title: "Paiement, Référence de la dette",
        description: "cette référence est indispensable pour que les usagers puissent effectuer leurs paiements",
        image: "/images/refdet.PNG",
        features: [
          "Minimum de caractére est de 6",
          "Maximum de caractére est de 30",
          "Champ obligatoire"
        ]
      },
      {
        id: "montant",
        title: "Paiement, Montant",
        description: "Il s'agit du montant de la facture ",
        image: "/images/Montant.PNG",
        features: [
          "Vous ne pouvez mettre que des chiffres",
          "Maximum de caractére est de 11",
          "Champ obligatoire"
        ]
      },
      {
        id: "objet",
        title: "Paiement, objet",
        description: "Il s'agit de l'objet de l'operation ",
        image: "/images/objet.PNG",
        features: [
          "Maximum de caractére est de 100",
          "Champ facultative"
        ]
      },
      {
        id: "mail",
        title: "Paiement, Mail",
        description: "Il s'agit de l'adresse mail de l'usager ",
        image: "/images/Mail.PNG",
       features: [
“Maximum de caractére est de 100”,
“Champ obligatoire”
]
},
{
id: “type-paiement”,
title: “Paiement, Type de Paiement”,
description: “Il s’agit du type de paiement soit Webservice, soit url, soit payfip “,
image: “/images/Typepaiement.PNG”,
features: [
“selection obligatoire”
]
},
{
id: “dsp”,
title: “Paiement, DSP”,
description: “le champ DSP (Date de Service Payeur )”,
image: “/images/Dsp.PNG”,
features: [
“Vous ne pouvez mettre que des chiffres”,
“Maximum de caractére est de 3”,
“Champ obligatoire”
]
},
{
id: “duree”,
title: “Paiement, Durée”,
description: “Il s’agit de la durée de la page url ou webservice de paiement “,
image: “/images/Duree.PNG”,
features: [
“Vous ne pouvez mettre que des chiffres”,
“Maximum de caractére est de 4”,
“Champ obligatoire”
]
},
{
id: “code-service”,
title: “Paiement, Code Service”,
description: “Il s’agit du code service “,
image: “/images/Codeservice.PNG”,
features: [
“Vous ne pouvez mettre que des chiffres”,
“Maximum de caractére est de 10”,
“Champ obligatoire”
]
},
{
id: “transaction”,
title: “Paiement, Transaction”,
description: “Il s’agit de la Transaction avec le Webservice “,
image: “/images/transaction.PNG”,
features: [
“Ce champ génère une page contenant les informations entrées”,
“Avec un bouton permettant de simuler une transaction”
]
},]
},
{
category: “Fichiers”,
sections: [
{
id: “telechargement”,
title: “Téléchargement de fichiers , sélection”,
description: “Arrivé sur la page de téléchargement, vous devrez sélectionner des options afin d’afficher les fichiers que vous souhaitez télécharger.”,
image: “/images/téléchargement.PNG”,
features: [
“Le type de données : Données/Log”,
“Environnement : Tipi/tipi-client”,
“Zone : ZA/ZU”
]
},
{
id: “recuperation”,
title: “Récupérer de fichiers”,
description: “Cette section permet de récupérer des fichiers spécifiques.”,
image: “/images/récupération.PNG”,
features: [
“Génère un fichier ZIP contenant la liste des fichiers que vous avez sélectionnés dans le tableau”,
]
},
// autres sections…
]
},
];

const categories = [
{ name: “Navigation”, pages: pages.find(page => page.category === “Navigation”)?.sections },
{ name: “Jeux de données”, pages: pages.find(page => page.category === “Jeux de données”)?.sections },
{ name: “Suivi de production”, pages: pages.find(page => page.category === “Suivi de production”)?.sections },
{ name: “Paiement”, pages: pages.find(page => page.category === “Paiement”)?.sections },
{ name: “Fichiers”, pages: pages.find(page => page.category === “Fichiers”)?.sections },
];

const activeCategoryIndex = ref(0);
const activeCategory = computed(() => categories[activeCategoryIndex.value]);

const setActiveCategory = (index: number) => {
activeCategoryIndex.value = index;
};
