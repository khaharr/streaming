<template>
  <div :class="['vh-100', isDarkMode ? 'dark-mode' : 'light-mode']">
    <Navbar :isDarkMode="isDarkMode" @toggleDarkMode="toggleDarkMode" />
    <NuxtPage />
  </div>
</template>


<script setup lang="ts">
import { ref, onMounted } from 'vue';
import Navbar from '~/components/navbar.vue';

// Gestion de l'état du thème
const isDarkMode = ref(false);

// Fonction pour basculer le thème
const toggleDarkMode = () => {
  isDarkMode.value = !isDarkMode.value;
  localStorage.setItem('darkMode', isDarkMode.value ? 'true' : 'false');
  // console.log(isDarkMode.value)
};

// Appliquer la classe CSS correspondante au body
onMounted(() => {
  const darkModeSetting = localStorage.getItem('darkMode');
  if (darkModeSetting == 'true') {
    isDarkMode.value = true;
  }



  const applyTheme = () => {
    if (isDarkMode.value) {
      document.body.classList.add('dark-mode');
      document.body.classList.remove('light-mode');
    } else {
      document.body.classList.add('light-mode');
      document.body.classList.remove('dark-mode');
    }
  };

  applyTheme();

  // Regarder les changements de isDarkMode pour ré-appliquer le thème
  watch(isDarkMode, applyTheme);
});


</script>



<style lang="scss">
:root {
  --color-white: var(--bs-white);
  --color-gray-900: #1a1a1a;
  --color-gray-800: #373739;
  --color-gray-200: #6c757d;
  --color-gray-100: #c0ccd4;
  --color-yelow-500: rgb(228, 158, 17);
  --color-white-100: #ffffff;
  --color-blue-100 : #56adff;
  --color-blue-300 : #0056be;


}
.table {
  th,
  .th-inner {
      background-color: var(--color-gray-900) !important;
    }
  }

.pagination {
  --bs-pagination-active-border-color: var(--color-gray-200);
  --bs-pagination-active-bg: var(--color-gray-200);
  --bs-pagination-color: var(--color-gray-200);
  --bs-pagination-focus-box-shadow: var(--color-gray-200);
  --bs-pagination-hover-border-color: var(--color-gray-200);
  --bs-pagination-hover-color: var(--color-gray-200);
}

.card {
  box-shadow: 10px 5px 5px rgb(180, 180, 180);
}
body.light-mode {
  #iconTheme {
    color: black;
  }

  --background-color-day: #dfdad8;
  --background-color-white: var(--color-white-100);
  background-color: var(--background-color-day);

  .MO{
    color: var(--color-gray-900);
  }

  li{
    border-radius: 15px;
  }

  li:hover{
    border-radius: 20px;
  }
  li a{
    border-radius: 15px;
  }
  li a:hover {
    background-color: var(--color-gray-100);
        color: var(--color-white);
        border-radius: 20px;
    }

   
}


body.dark-mode {
  --bs-body-color: var(--color-white);
  --bs-body-bg: var(--color-gray-800) !important;

  background-color: var(--color-gray-800) !important;
  color: var(--color-white) !important;

  .btn-close{
    background-color: var(--color-white-100);
  }

  .form-control-simple::placeholder{
    color: var(--color-white-100);
  }

  li a:hover {
        background-color: var(--color-gray-100);
        color: var(--color-white);
        border-radius: 20px;
    }

    li a,
    .navbar-brand,
    .white {
        color: var(--background-color-white);
        border-radius: 15px;
    }

  .MO{
    color: var(--color-white-100);
  }
  .form-check-label {
  margin-left: 5px;
  color:var(--color-gray-100);
}
  #iconTheme {
    color: var(--color-yelow-500);
  }

  
  
  .form-floating>.form-control-plaintext~label,
  .form-floating>.form-control:focus~label,
  .form-floating>.form-control:not(:placeholder-shown)~label,
  .form-floating>.form-select~label {
    margin-left: 5px;
  }
  
  .black,
  .mtj,
  .form-floating>.form-control-plaintext~label,
  .form-floating>.form-control:focus~label,
  .form-floating>.form-control:not(:placeholder-shown)~label,
  .form-floating>.form-select~label,
  .form-control-placeholder-gray-100::placeholder {
    color: var(--color-white-100);
  }


  // Gestion du bouton de type"file"
  input::file-selector-button {
    background-color: var(--color-gray-900);
  }

  .form-control:hover:not(:disabled):not([readonly])::file-selector-button {
    background-color: var(--color-gray-200);
  }

  //Fin Gestion du bouton de type"file"

  .dropdown-menu {
    --bs-dropdown-link-active-bg: var(--color-gray-100);
    --bs-dropdown-bg: var(--color-gray-200);
  }

  .modal-content{
    border-color: var(--color-gray-100);
  }

  .table {
    td {
      background-color: var(--color-gray-800) !important;
    }


    td,
    th {
      color: var(--color-white) !important;
    }
  }



  .bubble {
    box-shadow: 0 0 10px var(--color-white), 0 0 20px var(--color-white), 0 0 30px var(--color-white);
  }

  .mtj {
    background-color: var(--color-blue-300);
  }




  .form-check-input:checked {
    background-color: var(--color-gray-200);
  }

  .form-check-input:checked:focus,
  .form-check-input:focus {
    box-shadow: 0 0 0 .25rem var(--color-gray-200);
  }

  .form-check-input:focus,
  .form-check-input:checked,
  .file {
    border-color: var(--background-color-white);
  }

}


/* body.dark-mode.form-floating>label {
  color: var(--color-white)
} */

/* body.light-mode label {
  color: #000000;
} */
/* body.dark-mode nav {
  background-color: var(--background-color-night) !important;
} */


/* 
body.dark-mode label{
  color: rgb(177, 177, 177);
} */





// body.dark-mode .card {
//   background-color: var(--background-color-night);
//   box-shadow: 10px 5px 5px rgba(0, 0, 0, 0.5);
//   border-color: #ffffff;

// } 

.page-enter-active,
.page-leave-active {
  transition: all 0.3s;
}

.page-enter-from,
.page-leave-to {
  opacity: 0;
  filter: blur(1rem);
}

/* h1 {
  font-size: 1.8rem;
  color: var(--text-color-day);
  font-weight: bold;
}

body.dark-mode h1 {
  color: var(--text-color-night);
}

body.light-mode nav {
  background-color: #000000;
} */

/* body.dark-mode h5 {
  color: #ffffff;
}

body.dark-mode h4 {
  color: #ffffff;
} */

/* body.dark-mode .table-hover {
  background-color: rgb(214, 214, 214);
}
*/
body.light-mode .mtj {
  background-color: var(--color-blue-300);
  color: var(--background-color-white);
}



body.light-mode .form-control-simple::placeholder{
    color: var(--color-gray-900);
  }

body.light-mode .bubble {
  box-shadow: 0 0 10px rgb(0, 0, 0), 0 0 20px rgb(0, 0, 0), 0 0 30px rgb(0, 0, 0);
}





/* body.dark-mode h6 {
  color: white;
}

body.dark-mode h3 {
  color: white;
} */

body.light-mode .th-inner {
  background-color: rgb(0, 0, 0);
  color: white;
}



body.light-mode .form-check-input:checked {
  background-color: var(--color-gray-200);
  border-color: var(--background-color-white);
}

body.light-mode .form-check-input:checked:focus {
  box-shadow: 0 0 0 .25rem var(--background-color-night);
}

body.light-mode .form-check-input:focus {
  border-color: var(--background-color-white);
  box-shadow: 0 0 0 .25rem var(--background-color-night);
}

.mark,
mark {
  background-color: #d3d3d3;
  padding: none;

  
}

/*Amination attente */
#loading-animation {
  display: none;
  /* Le masquer par défaut */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  /* Fond semi-transparent pour un effet d'obscurcissement */
  z-index: 9999;
}

.loader {
  border: 4px solid #f3f3f3;
  border-top: 4px solid #3498db;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: spin 2s linear infinite;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -20px;
  margin-left: -20px;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}
</style>
